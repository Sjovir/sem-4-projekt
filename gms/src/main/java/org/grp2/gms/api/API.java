package org.grp2.gms.api;

import io.javalin.Javalin;
import org.grp2.gms.domain.GMS;

import static io.javalin.apibuilder.ApiBuilder.*;

public class API extends AbstractAPI {

    public API(int PORT) {
        super(PORT);
    }

    @Override
    public void start() {
        Javalin app = Javalin.create()
                .enableRouteOverview("/routes")
                .enableCorsForAllOrigins()
                .enableAutogeneratedEtags()
                .port(PORT);
        APIHandler handler = new APIHandler(new GMS());
        setRoutes(app, handler);
        app.start();
    }

    private void setRoutes(Javalin app, APIHandler handler) {
        app.routes(() -> {
            path("/api", () -> {
                //raspberry pi calls
                post("/write-value/:greenhouse-id/:type/:value", handler::writeValue);
                post("/write-gms-connection/:greenhouse-id/:ip-address/:port", handler::writeGMSConnection);
                post("/write-humidity-setpoint/:greenhouse-id/:min-value/:max-value/:alarm-min-value/:alarm-max-value", handler::writeHumiditySetPoint);
                post("/write-temperature-setpoint/:greenhouse-id/:min-value/:max-value/:alarm-min-value/:alarm-max-value", handler::writeTemperatureSetPoint);
                post("/write-light-setpoint/:greenhouse-id/:blue-value/:red-value/:time", handler::writeLightSetPoint);
                post("/start-regulator/:greenhouse-id", handler::startRegulator);

                get("/get-greenhouse-setpoints/:greenhouse-id", handler::getGreenhouseSetpoints);
                get("get-greenhouses/", handler::getGreenhouses);

                //gms calls
                post("/write-collected-data/:greenhouse-id/:timestamp/:temperature/:humidity/:red-light/:blue-light", handler::writeCollectedData);
                post("setup-greenhouse/:ip-address/:port/:location/:name", handler::setupGreenhouse);
                get("/get-greenhouse-data/:greenhouse-id", handler::getGreenhouseData);
            });
        });

    }
}
